import streamlit as st
import sqlite3
import pandas as pd

# Impostazioni delle pagina
st.set_page_config(
    page_title="App Rosso - Home", 
    page_icon="ðŸ¤–", 
    layout="wide",)

# Connessione al database SQLite
conn = sqlite3.connect('offerte.db') 

def count_all_art():
    query = "SELECT COUNT(*) FROM articoli"
    cursor = conn.execute(query)
    count = cursor.fetchone()[0]
    return count

def count_all_az():
    query = "SELECT COUNT(*) FROM aziende"
    cursor = conn.execute(query)
    count = cursor.fetchone()[0]
    return count

def count_all_off():
    query = "SELECT COUNT(*) FROM offerte"
    cursor = conn.execute(query)
    count = cursor.fetchone()[0]
    return count

# Funzione per caricare i dati dal db offerte
def load_data(select):
    if select == "Articoli":
        query = "SELECT * FROM articoli"
    elif select == "Aziende":
        query = "SELECT * FROM aziende"
    else:
        query = ''' SELECT
                        articoli.Descrizione AS Descrizione_Articolo,
                        aziende.Nome AS Nome_Fornitore,
                        offerte.Moq,
                        offerte.Lead_time,
                        offerte.Incoterms,
                        offerte.Pagamento,
                        offerte.Prezzo,
                        offerte.Data_ins,
                        offerte.Data_val
                    FROM
                        offerte
                    JOIN
                        articoli ON offerte.Articolo = articoli.Id_art
                    JOIN
                        aziende ON offerte.Fornitore = aziende.Id_az
                    ORDER BY offerte.Id_off DESC;  '''
        
    df_raw = pd.read_sql_query(query, conn) # Qui i campi vuoti sono "None"
    df = df_raw.fillna("")  # Qui i campi vuoti sono ""
    return df

# Creazione dell'app Streamlit
def main():
    st.title('Home', anchor=False)
    
    st.write("")

    col1, col2, col3 = st.columns(3)
    
    with col1:
        art_overall = count_all_art()
        container1 = st.container(border=True,)
        container1.metric("Articoli inseriti", value=art_overall, delta=5)
    
    with col2:
        az_overall = count_all_az()
        container2 = st.container(border=True)
        container2.metric("Aziende inserite", value=az_overall, delta=0)
    
    with col3:
        off_overall = count_all_off()
        container3 = st.container(border=True)
        container3.metric("Offerte inserite", value=off_overall, delta=15)
    
    st.divider()

    selezione = st.selectbox("Seleziona", ("Offerte", "Articoli", "Aziende"))

    data = load_data(selezione)

    st.dataframe(data, use_container_width=True,  hide_index=True)


if __name__ == '__main__':
    main()
